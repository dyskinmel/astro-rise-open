---
// tableCell.astro
import { tv, type VariantProps } from 'tailwind-variants';
import { cn } from '@src/lib/utils';

// Style definitions using Tailwind Variants
export const tableCellVariants = tv({
  base: '',
  variants: {
    variant: {
      default: 'align-middle',
      head: 'bg-muted/50 text-foreground font-semibold',
      item: `text-foreground`,
    },
    size: {
      default: 'p-4 [&:has([role=checkbox])]:pr-0',
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'default',
  },
});

export type TableCellVariant = VariantProps<typeof tableCellVariants>['variant'];
export type TableCellSize = VariantProps<typeof tableCellVariants>['size'];

// Component props type definition
export interface TableCellProps {
  variant?: TableCellVariant;
  size?: TableCellSize;
  class?: string;
  [key: string]: any;
}

const { variant = 'default', size = 'default', class: className, ...restProps } = Astro.props as TableCellProps;

// Merge Tailwind Variants with provided classes
const finalClassName = cn(tableCellVariants({ variant, size }), className);
---

<td class={finalClassName} {...restProps}>
  <slot />
</td>
