---
// tableHead.astro
import { tv, type VariantProps } from 'tailwind-variants';
import { cn } from '@src/lib/utils';

// Style definitions using Tailwind Variants
export const tableHeadVariants = tv({
  base: '',
  variants: {
    variant: {
      default: 'text-muted-foreground text-left align-middle ',
    },
    size: {
      default: 'h-12 px-4 font-medium [&:has([role=checkbox])]:pr-0',
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'default',
  },
});

export type TableHeadVariant = VariantProps<typeof tableHeadVariants>['variant'];
export type TableHeadSize = VariantProps<typeof tableHeadVariants>['size'];

// Component props type definition
export interface TableHeadProps {
  variant?: TableHeadVariant;
  size?: TableHeadSize;
  class?: string;
  [key: string]: any;
}

const { variant = 'default', size = 'default', class: className, ...restProps } = Astro.props as TableHeadProps;

// Merge Tailwind Variants with provided classes
const finalClassName = cn(tableHeadVariants({ variant, size }), className);
---

<th class={finalClassName} {...restProps}>
  <slot />
</th>
