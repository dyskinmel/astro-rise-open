---
// cardTitle.astro
import { tv, type VariantProps } from 'tailwind-variants';
import { cn } from '@src/lib/utils';

// Style definitions using Tailwind Variants
export const cardTitleVariants = tv({
  base: 'text-center',
  variants: {
    variant: {
      default: 'leading-none tracking-tight',
      highlight: 'text-primary',
      destructive: '',
    },
    size: {
      default: 'text-lg font-semibold',
      xl: 'text-xl font-semibold',
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'default',
  },
});

export type CardTitleVariant = VariantProps<typeof cardTitleVariants>['variant'];
export type CardTitleSize = VariantProps<typeof cardTitleVariants>['size'];
export type CardTitleTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';

// Component props type definition
export interface CardTitleProps {
  variant?: CardTitleVariant;
  size?: CardTitleSize;
  as?: CardTitleTag;
  class?: string;
  [key: string]: any;
}

const {
  variant = 'default',
  size = 'default',
  as = 'h3',
  class: className,
  ...restProps
} = Astro.props as CardTitleProps;

const Tag = as;

// Merge Tailwind Variants with provided classes
const finalClassName = cn(cardTitleVariants({ variant, size }), className);
---

<Tag class={finalClassName} {...restProps}>
  <slot />
</Tag>
