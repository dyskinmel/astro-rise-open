---
// card.astro
import { tv, type VariantProps } from 'tailwind-variants';
import { cn } from '@src/lib/utils';

// Style definitions using Tailwind Variants
export const cardVariants = tv({
  base: 'bg-card text-card-foreground',
  variants: {
    variant: {
      default: 'border border-primary shadow-sm',
      highlight: 'relative border-2 border-primary',
      default_70: 'bg-card/70 border border-primary shadow-sm',
      highlight_70: 'bg-card/70 relative border-2 border-primary',
      outline: '',
      ghost: 'bg-card/70 hover:bg-accent shadow-sm transition-shadow duration-300',
    },
    size: {
      default: '',
      v_rec: 'p-8 rounded-2xl w-[350px] lg:w-[min(30.5vw,350px)] lg:w-[min(calc(80vw / 3),350px)]',
      blog: 'rounded-lg px-6 h-full min-h-60 min-w-90',
      sm: '',
      lg: '',
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'default',
  },
});

export type CardVariant = VariantProps<typeof cardVariants>['variant'];
export type CardSize = VariantProps<typeof cardVariants>['size'];

// Component props type definition
export interface CardProps {
  variant?: CardVariant;
  size?: CardSize;
  class?: string;
  [key: string]: any;
}

const { variant = 'default', size = 'default', class: className, ...restProps } = Astro.props as CardProps;

// Merge Tailwind Variants with provided classes
const finalClassName = cn(cardVariants({ variant, size }), className);
---

<div class={finalClassName} {...restProps}>
  <slot />
</div>
