---
// cardHeader.astro
import { tv, type VariantProps } from 'tailwind-variants';
import { cn } from '@src/lib/utils';

// Style definitions using Tailwind Variants
export const cardFooterVariants = tv({
  base: '',
  variants: {
    variant: {
      default: 'flex items-center',
      glass: '',
      destructive: '',
      outline: '',
      ghost: '',
    },
    size: {
      default: 'p-6 pt-0',
      sm: '',
      lg: '',
    },
  },
  defaultVariants: {
    variant: 'default',
    size: 'default',
  },
});

export type CardFooterVariant = VariantProps<typeof cardFooterVariants>['variant'];
export type CardFooterSize = VariantProps<typeof cardFooterVariants>['size'];

// Component props type definition
export interface CardFooterProps {
  variant?: CardFooterVariant;
  size?: CardFooterSize;
  class?: string;
  [key: string]: any;
}

const { variant = 'default', size = 'default', class: className, ...restProps } = Astro.props as CardFooterProps;

// Merge Tailwind Variants with provided classes
const finalClassName = cn(cardFooterVariants({ variant, size }), className);
---

<div class={finalClassName} {...restProps}>
  <slot />
</div>
