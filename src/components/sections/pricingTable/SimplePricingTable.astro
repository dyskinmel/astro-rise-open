---
import * as Table from '@components/ui/table/index.astro';
import { Button } from '@components/ui/button/index.astro';
import { Text } from '@components/ui/text/index.astro';
import { Check } from '@lucide/astro';

const { pageContent } = Astro.props;
const pricingTable = pageContent;
---

<section class="hidden md:block w-[min(95vw,1090px)] overflow-x-auto">
  <Table.Root variant="default_70">
    <Table.Head>
      <Table.Row>
        <Table.Cell />
        {
          pricingTable.plans.map((plan) => (
            <Table.Cell class="text-center">
              <Text as="h3" variant="default" size="md" class="font-semibold mb-2">
                {plan.name}
              </Text>
              <Button variant="primary" size="xs" href={plan.url}>
                Get started
              </Button>
            </Table.Cell>
          ))
        }
      </Table.Row>
    </Table.Head>
    <Table.Body>
      {
        pricingTable.categories.map((category) => (
          <>
            <Table.Row>
              <Table.Cell variant="head" colSpan={pricingTable.plans.length + 1}>
                {category.name}
              </Table.Cell>
            </Table.Row>
            {category.items.map((item) => (
              <Table.Row>
                <Table.Cell variant="item">{item.name}</Table.Cell>
                {item.values.map((value) => (
                  <Table.Cell variant="item" class="text-center">
                    {value}
                  </Table.Cell>
                ))}
              </Table.Row>
            ))}
          </>
        ))
      }
    </Table.Body>
  </Table.Root>
</section>
<!-- モバイル向けタブ: md以上では非表示 -->
<div class="block md:hidden m-8">
  <!-- Tabs Buttons -->
  <div class="bg-background/70 flex justify-around border-b mb-4">
    {
      pricingTable.plans.map((plan, index) => (
        <button type="button" class="mobile-tab py-2 px-4 text-center text-muted-foreground" data-index={index}>
          {plan.name}
        </button>
      ))
    }
  </div>
  <!-- Tab content -->
  <div id="mobileTabContent">
    {
      pricingTable.plans.map((plan, index) => (
        <div className={`mobile-tab-content ${index === 0 ? '' : 'hidden'}`} data-index={index}>
          <Table.Root variant="default_70">
            <Table.Body>
              {pricingTable.categories.map((category) => (
                <>
                  <Table.Row>
                    <Table.Cell variant="head" colSpan={pricingTable.plans.length + 1}>
                      {category.name}
                    </Table.Cell>
                  </Table.Row>
                  {category.items.map((item) => (
                    <Table.Row>
                      <Table.Cell variant="item">{item.name}</Table.Cell>
                      <Table.Cell variant="item" class="text-center">
                        {item.values[index]}
                      </Table.Cell>
                    </Table.Row>
                  ))}
                </>
              ))}
            </Table.Body>
          </Table.Root>
        </div>
      ))
    }
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabs = document.querySelectorAll('.mobile-tab');
    const contents = document.querySelectorAll('.mobile-tab-content');

    function activateTab(index) {
      // Remove active state from all tabs and hide all contents
      tabs.forEach((tab) => {
        tab.classList.remove('text-primary', 'border-b-2', 'border-primary');
        tab.classList.add('text-mute-foreground');
      });
      contents.forEach((content) => {
        content.classList.add('hidden');
      });

      // Activate the selected tab
      const activeTab = document.querySelector('.mobile-tab[data-index="' + index + '"]');
      if (activeTab) {
        activeTab.classList.add('text-primary', 'border-b-2', 'border-primary');
        activeTab.classList.remove('text-mute-foreground');
      }

      // Show the corresponding content
      const activeContent = document.querySelector('.mobile-tab-content[data-index="' + index + '"]');
      if (activeContent) {
        activeContent.classList.remove('hidden');
      }
    }

    // Initialize with the first tab active
    activateTab(0);

    // Add click event listeners to all tabs
    tabs.forEach((tab) => {
      tab.addEventListener('click', function () {
        const index = this.getAttribute('data-index');
        activateTab(index);
      });
    });
  });
</script>
